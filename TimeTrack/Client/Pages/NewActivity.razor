@page "/client_activity/new"
@using TimeTrack.Shared
@using TimeTrack.Client.Components
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Log Activity</PageTitle>

<MudText Typo="Typo.h1">New Activity</MudText>
@if (saveError)
{
    <MudAlert Severity="Severity.Error" ShowCloseIcon CloseIconClicked="@(() => saveError = false)">Unable to create the activity, please try again.</MudAlert>
}

<ActivityEditor Model="@model" OnSubmit="@OnValidSubmit"/>

@code {
    ActivityForm model = new ActivityForm();
    private bool saveError = false;

    async Task OnValidSubmit(ActivityForm form)
    {
        var response = await Http.PostAsync("/api/activities", JsonContent.Create(form));
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/");

        } else
        {
            saveError = true;
        }
    }
}
