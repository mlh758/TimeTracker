// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTrack.Server.Data;

#nullable disable

namespace TimeTrack.Server.Data.Migrations
{
    [DbContext(typeof(TimeContext))]
    [Migration("20221106155226_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActivityAssessment", b =>
                {
                    b.Property<int>("AssessmentsId")
                        .HasColumnType("int");

                    b.Property<int>("ClientActivitiesId")
                        .HasColumnType("int");

                    b.HasKey("AssessmentsId", "ClientActivitiesId");

                    b.HasIndex("ClientActivitiesId");

                    b.ToTable("ActivityAssessment");
                });

            modelBuilder.Entity("CategoryClient", b =>
                {
                    b.Property<int>("DisabilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("DisabledClientsId")
                        .HasColumnType("int");

                    b.HasKey("DisabilitiesId", "DisabledClientsId");

                    b.HasIndex("DisabledClientsId");

                    b.ToTable("CategoryClient");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasComment("Duration in minutes");

                    b.Property<DateTime>("Start")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Assessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Assessment names from buros.org mental measurements yearbook series");

                    b.HasKey("Id");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("AgeId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int>("SexualOrientationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("RaceId");

                    b.HasIndex("SettingId");

                    b.HasIndex("SexualOrientationId");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasMaxLength(8)
                        .HasColumnType("Binary(8)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ActivityAssessment", b =>
                {
                    b.HasOne("TimeTrack.Shared.Models.Assessment", null)
                        .WithMany()
                        .HasForeignKey("AssessmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ClientActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryClient", b =>
                {
                    b.HasOne("TimeTrack.Shared.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("DisabilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("DisabledClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Activity", b =>
                {
                    b.HasOne("TimeTrack.Shared.Models.Client", "Client")
                        .WithMany("Activities")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Client", b =>
                {
                    b.HasOne("TimeTrack.Shared.Models.Category", "Age")
                        .WithMany("AgedClients")
                        .HasForeignKey("AgeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.Category", "Gender")
                        .WithMany("GenderedClients")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.Category", "Race")
                        .WithMany("RaceClients")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.Category", "Setting")
                        .WithMany("SettingClients")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.Category", "SexualOrientation")
                        .WithMany("SexualOrientationClients")
                        .HasForeignKey("SexualOrientationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TimeTrack.Shared.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Age");

                    b.Navigation("Gender");

                    b.Navigation("Race");

                    b.Navigation("Setting");

                    b.Navigation("SexualOrientation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Category", b =>
                {
                    b.Navigation("AgedClients");

                    b.Navigation("GenderedClients");

                    b.Navigation("RaceClients");

                    b.Navigation("SettingClients");

                    b.Navigation("SexualOrientationClients");
                });

            modelBuilder.Entity("TimeTrack.Shared.Models.Client", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
